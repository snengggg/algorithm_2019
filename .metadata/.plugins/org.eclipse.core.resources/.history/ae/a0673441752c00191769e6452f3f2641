package binary_parametric;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class bjoon_1654 {

	static int K;
	static int N;
	static long[] lan;
	static long res;
	static long max;
	
	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		K = Integer.parseInt(st.nextToken());
		N = Integer.parseInt(st.nextToken());
		max = 0;
		lan = new long[K];
		
		for (int i = 0; i < K; i++) {
			lan[i] = Integer.parseInt(br.readLine());
			max = Math.max(max, lan[i]);
		}

		long left = 0, right = max*2*K/N;
		long mid = 0;
		long lanNum = 0;
		
		while(left < right) {
			
			if(left == right-1) {
				mid = left;
				break;
			}
			
			mid = (left + right)/2;
			lanNum = 0;
			for(int i = 0; i < K; i++) {
				lanNum += lan[i] / mid;
				if(lanNum >= N) break;
			}
			if(lanNum > N) {
				left = mid;
				continue;
			}
			if(lanNum < N) {
				right = mid;
				continue;
			}
			
			while(lanNum >= N) {
				mid++;
				lanNum = 0;
				for (int i = 0; i < K; i++) {
					lanNum += lan[i] / mid;
				}
			}
			mid--;
			break;
			
		}

		System.out.println(mid);
	}
}
